(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{272:function(e,r,t){"use strict";t.r(r);var a=t(28),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"代码提交规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码提交规范"}},[e._v("#")]),e._v(" 代码提交规范")]),e._v(" "),t("h3",{attrs:{id:"type-提交类型-required"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type-提交类型-required"}},[e._v("#")]),e._v(" type 提交类型(required)")]),e._v(" "),t("p",[e._v("每个提交都必须使用类型字段前缀，它由一个名词组成，诸如 feat 或 fix ，其后接一个可选的作用域字段，以及一个必要的冒号（英文半角）和空格。")]),e._v(" "),t("blockquote",[t("p",[e._v("feat：当一个提交为应用或类库实现了新特性时，必须使用 feat 类型"),t("br"),e._v("\nfix：当一个提交为应用修复了 bug 时，必须使用 fix 类型"),t("br"),e._v("\ndocs：只修改了文档"),t("br"),e._v("\nstyle：做了不影响代码含义的修改，空格、格式化、缺少分号等等"),t("br"),e._v("\nrefactor：进行代码重构，既不是修复bug，也不是新功能的修改"),t("br"),e._v("\nperf：改进性能的代码"),t("br"),e._v("\ntest：增加测试或更新已有的测试"),t("br"),e._v("\nchore：构建或辅助工具或依赖库的更新")])]),e._v(" "),t("p",[e._v("例如：")]),e._v(" "),t("blockquote",[t("p",[e._v("feat: 增加年审工单"),t("br"),e._v("\nfix: 修复运维类请款单页面内存泄漏的问题"),t("br"),e._v("\nchore(release): AMS V2.18.0")])]),e._v(" "),t("h3",{attrs:{id:"scope-范围"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scope-范围"}},[e._v("#")]),e._v(" scope 范围")]),e._v(" "),t("p",[e._v("作用域字段可以跟随在类型字段后面。作用域必须是一个描述某部分代码的名词，并用圆括号包围，例如： fix(parser)")]),e._v(" "),t("h3",{attrs:{id:"description-描述-required"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#description-描述-required"}},[e._v("#")]),e._v(" description 描述(required)")]),e._v(" "),t("p",[e._v("描述字段必须紧接在类型/作用域前缀的空格之后。描述指的是对代码变更的简短总结，例如： fix: array parsing issue when multiple spaces were contained in string.")]),e._v(" "),t("h3",{attrs:{id:"body-正文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#body-正文"}},[e._v("#")]),e._v(" body 正文")]),e._v(" "),t("p",[e._v("在简短描述之后，可以编写更长的提交正文，为代码变更提供额外的上下文信息。正文必须起始于描述字段结束的一个空行后。")]),e._v(" "),t("h3",{attrs:{id:"footer-页脚注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#footer-页脚注释"}},[e._v("#")]),e._v(" footer 页脚注释")]),e._v(" "),t("p",[e._v("在正文结束的一个空行之后，可以编写一行或多行脚注。脚注必须包含关于提交的元信息，例如：关联的合并请求、Reviewer、破坏性变更，每条元信息一行。")]),e._v(" "),t("h3",{attrs:{id:"breaking-change-破坏性变更"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#breaking-change-破坏性变更"}},[e._v("#")]),e._v(" BREAKING CHANGE 破坏性变更")]),e._v(" "),t("ul",[t("li",[e._v("破坏性变更必须标示在正文区域最开始处，或脚注区域中某一行的开始。一个破坏性变更必须包含大写的文本 BREAKING CHANGE，后面紧跟冒号和空格。")]),e._v(" "),t("li",[e._v("在 BREAKING CHANGE: 之后必须提供描述，以描述对 API 的变更。例如： BREAKING CHANGE: environment variables now take precedence over config files.")])]),e._v(" "),t("h2",{attrs:{id:"faq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[e._v("#")]),e._v(" FAQ")]),e._v(" "),t("h3",{attrs:{id:"一次提交多种类型怎么操作？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一次提交多种类型怎么操作？"}},[e._v("#")]),e._v(" 一次提交多种类型怎么操作？")]),e._v(" "),t("p",[e._v("尽可能拆分的task，每完成一部分就进行一次提交，避免一次提交过多的代码。这样能够避免一次commit修改过多文件，导致后续的维护，回退等的困难。\n如果真的有这样的提交，可以选择最重要改动的type，在body部分详细写明具体的改动。")]),e._v(" "),t("h3",{attrs:{id:"参考："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考："}},[e._v("#")]),e._v(" 参考：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.conventionalcommits.org/en/v1.0.0-beta.4/",target:"_blank",rel:"noopener noreferrer"}},[e._v("约定式提交规范"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.im/post/5d887df6f265da03f04d0b83",target:"_blank",rel:"noopener noreferrer"}},[e._v("你见过最奇葩的代码提交信息是什么？别再为写commit message头疼了！"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=s.exports}}]);